# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from common.rpc import base_pb2 as common_dot_rpc_dot_base__pb2
from common.rpc import detector_pb2 as common_dot_rpc_dot_detector__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in common/rpc/detector_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DetectorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ping = channel.unary_unary(
                '/Detector/ping',
                request_serializer=common_dot_rpc_dot_base__pb2.Ping.SerializeToString,
                response_deserializer=common_dot_rpc_dot_base__pb2.Pong.FromString,
                _registered_method=True)
        self.loadDetector = channel.unary_unary(
                '/Detector/loadDetector',
                request_serializer=common_dot_rpc_dot_detector__pb2.LoadDetectorRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.LoadDetectorResponse.FromString,
                _registered_method=True)
        self.listDetector = channel.unary_unary(
                '/Detector/listDetector',
                request_serializer=common_dot_rpc_dot_detector__pb2.ListDetectorRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.ListDetectorResponse.FromString,
                _registered_method=True)
        self.removeDetector = channel.unary_unary(
                '/Detector/removeDetector',
                request_serializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorResponse.FromString,
                _registered_method=True)
        self.countDetector = channel.unary_unary(
                '/Detector/countDetector',
                request_serializer=common_dot_rpc_dot_detector__pb2.CountDetectorRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.CountDetectorResponse.FromString,
                _registered_method=True)
        self.updateDetector = channel.unary_unary(
                '/Detector/updateDetector',
                request_serializer=common_dot_rpc_dot_detector__pb2.UpdateDetectorRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.UpdateDetectorResponse.FromString,
                _registered_method=True)
        self.createDetector = channel.unary_unary(
                '/Detector/createDetector',
                request_serializer=common_dot_rpc_dot_detector__pb2.CreateDetectorRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.CreateDetectorResponse.FromString,
                _registered_method=True)
        self.trainDetector = channel.unary_unary(
                '/Detector/trainDetector',
                request_serializer=common_dot_rpc_dot_detector__pb2.TrainDetectorRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.TrainDetectorResponse.FromString,
                _registered_method=True)
        self.detectObjects = channel.unary_unary(
                '/Detector/detectObjects',
                request_serializer=common_dot_rpc_dot_detector__pb2.DetectObjectsRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.DetectObjectsResponse.FromString,
                _registered_method=True)
        self.detectTexts = channel.unary_unary(
                '/Detector/detectTexts',
                request_serializer=common_dot_rpc_dot_detector__pb2.DetectTextsRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.DetectTextsResponse.FromString,
                _registered_method=True)
        self.uploadDetectorImage = channel.unary_unary(
                '/Detector/uploadDetectorImage',
                request_serializer=common_dot_rpc_dot_detector__pb2.UploadDetectorImageRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.UploadDetectorImageResponse.FromString,
                _registered_method=True)
        self.listDetectorImage = channel.unary_unary(
                '/Detector/listDetectorImage',
                request_serializer=common_dot_rpc_dot_detector__pb2.ListDetectorImageRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.ListDetectorImageResponse.FromString,
                _registered_method=True)
        self.countDetectorImage = channel.unary_unary(
                '/Detector/countDetectorImage',
                request_serializer=common_dot_rpc_dot_detector__pb2.CountDetectorImageRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.CountDetectorImageResponse.FromString,
                _registered_method=True)
        self.removeDetectorImage = channel.unary_unary(
                '/Detector/removeDetectorImage',
                request_serializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorImageRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorImageResponse.FromString,
                _registered_method=True)
        self.removeDetectorImageLabel = channel.unary_unary(
                '/Detector/removeDetectorImageLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorImageLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorImageLabelResponse.FromString,
                _registered_method=True)
        self.countDetectorImageLabel = channel.unary_unary(
                '/Detector/countDetectorImageLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.CountDetectorImageLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.CountDetectorImageLabelResponse.FromString,
                _registered_method=True)
        self.addDetectorImageLabel = channel.unary_unary(
                '/Detector/addDetectorImageLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.AddDetectorImageLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.AddDetectorImageLabelResponse.FromString,
                _registered_method=True)
        self.findDetectorImageLabel = channel.unary_unary(
                '/Detector/findDetectorImageLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.FindDetectorImageLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.FindDetectorImageLabelResponse.FromString,
                _registered_method=True)
        self.listDetectorImageLabel = channel.unary_unary(
                '/Detector/listDetectorImageLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.ListDetectorImageLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.ListDetectorImageLabelResponse.FromString,
                _registered_method=True)
        self.listDetectorLabel = channel.unary_unary(
                '/Detector/listDetectorLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.ListDetectorLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.ListDetectorLabelResponse.FromString,
                _registered_method=True)
        self.existsDetectorLabel = channel.unary_unary(
                '/Detector/existsDetectorLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.ExistsDetectorLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.ExistsDetectorLabelResponse.FromString,
                _registered_method=True)
        self.addDetectorLabel = channel.unary_unary(
                '/Detector/addDetectorLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.AddDetectorLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.AddDetectorLabelResponse.FromString,
                _registered_method=True)
        self.countDetectorLabel = channel.unary_unary(
                '/Detector/countDetectorLabel',
                request_serializer=common_dot_rpc_dot_detector__pb2.CountDetectorLabelRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.CountDetectorLabelResponse.FromString,
                _registered_method=True)
        self.suggestStep = channel.unary_unary(
                '/Detector/suggestStep',
                request_serializer=common_dot_rpc_dot_detector__pb2.SuggestStepRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_detector__pb2.SuggestStepResponse.FromString,
                _registered_method=True)


class DetectorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ping(self, request, context):
        """Performs synchronous ping of service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loadDetector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listDetector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeDetector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countDetector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateDetector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createDetector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def trainDetector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def detectObjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def detectTexts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uploadDetectorImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listDetectorImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countDetectorImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeDetectorImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeDetectorImageLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countDetectorImageLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addDetectorImageLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findDetectorImageLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listDetectorImageLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listDetectorLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def existsDetectorLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addDetectorLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def countDetectorLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def suggestStep(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DetectorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ping': grpc.unary_unary_rpc_method_handler(
                    servicer.ping,
                    request_deserializer=common_dot_rpc_dot_base__pb2.Ping.FromString,
                    response_serializer=common_dot_rpc_dot_base__pb2.Pong.SerializeToString,
            ),
            'loadDetector': grpc.unary_unary_rpc_method_handler(
                    servicer.loadDetector,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.LoadDetectorRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.LoadDetectorResponse.SerializeToString,
            ),
            'listDetector': grpc.unary_unary_rpc_method_handler(
                    servicer.listDetector,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.ListDetectorRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.ListDetectorResponse.SerializeToString,
            ),
            'removeDetector': grpc.unary_unary_rpc_method_handler(
                    servicer.removeDetector,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorResponse.SerializeToString,
            ),
            'countDetector': grpc.unary_unary_rpc_method_handler(
                    servicer.countDetector,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.CountDetectorRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.CountDetectorResponse.SerializeToString,
            ),
            'updateDetector': grpc.unary_unary_rpc_method_handler(
                    servicer.updateDetector,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.UpdateDetectorRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.UpdateDetectorResponse.SerializeToString,
            ),
            'createDetector': grpc.unary_unary_rpc_method_handler(
                    servicer.createDetector,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.CreateDetectorRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.CreateDetectorResponse.SerializeToString,
            ),
            'trainDetector': grpc.unary_unary_rpc_method_handler(
                    servicer.trainDetector,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.TrainDetectorRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.TrainDetectorResponse.SerializeToString,
            ),
            'detectObjects': grpc.unary_unary_rpc_method_handler(
                    servicer.detectObjects,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.DetectObjectsRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.DetectObjectsResponse.SerializeToString,
            ),
            'detectTexts': grpc.unary_unary_rpc_method_handler(
                    servicer.detectTexts,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.DetectTextsRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.DetectTextsResponse.SerializeToString,
            ),
            'uploadDetectorImage': grpc.unary_unary_rpc_method_handler(
                    servicer.uploadDetectorImage,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.UploadDetectorImageRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.UploadDetectorImageResponse.SerializeToString,
            ),
            'listDetectorImage': grpc.unary_unary_rpc_method_handler(
                    servicer.listDetectorImage,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.ListDetectorImageRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.ListDetectorImageResponse.SerializeToString,
            ),
            'countDetectorImage': grpc.unary_unary_rpc_method_handler(
                    servicer.countDetectorImage,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.CountDetectorImageRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.CountDetectorImageResponse.SerializeToString,
            ),
            'removeDetectorImage': grpc.unary_unary_rpc_method_handler(
                    servicer.removeDetectorImage,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorImageRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorImageResponse.SerializeToString,
            ),
            'removeDetectorImageLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.removeDetectorImageLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorImageLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.RemoveDetectorImageLabelResponse.SerializeToString,
            ),
            'countDetectorImageLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.countDetectorImageLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.CountDetectorImageLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.CountDetectorImageLabelResponse.SerializeToString,
            ),
            'addDetectorImageLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.addDetectorImageLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.AddDetectorImageLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.AddDetectorImageLabelResponse.SerializeToString,
            ),
            'findDetectorImageLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.findDetectorImageLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.FindDetectorImageLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.FindDetectorImageLabelResponse.SerializeToString,
            ),
            'listDetectorImageLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.listDetectorImageLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.ListDetectorImageLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.ListDetectorImageLabelResponse.SerializeToString,
            ),
            'listDetectorLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.listDetectorLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.ListDetectorLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.ListDetectorLabelResponse.SerializeToString,
            ),
            'existsDetectorLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.existsDetectorLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.ExistsDetectorLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.ExistsDetectorLabelResponse.SerializeToString,
            ),
            'addDetectorLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.addDetectorLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.AddDetectorLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.AddDetectorLabelResponse.SerializeToString,
            ),
            'countDetectorLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.countDetectorLabel,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.CountDetectorLabelRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.CountDetectorLabelResponse.SerializeToString,
            ),
            'suggestStep': grpc.unary_unary_rpc_method_handler(
                    servicer.suggestStep,
                    request_deserializer=common_dot_rpc_dot_detector__pb2.SuggestStepRequest.FromString,
                    response_serializer=common_dot_rpc_dot_detector__pb2.SuggestStepResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Detector', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Detector', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Detector(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/ping',
            common_dot_rpc_dot_base__pb2.Ping.SerializeToString,
            common_dot_rpc_dot_base__pb2.Pong.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def loadDetector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/loadDetector',
            common_dot_rpc_dot_detector__pb2.LoadDetectorRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.LoadDetectorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listDetector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/listDetector',
            common_dot_rpc_dot_detector__pb2.ListDetectorRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.ListDetectorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeDetector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/removeDetector',
            common_dot_rpc_dot_detector__pb2.RemoveDetectorRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.RemoveDetectorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def countDetector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/countDetector',
            common_dot_rpc_dot_detector__pb2.CountDetectorRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.CountDetectorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateDetector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/updateDetector',
            common_dot_rpc_dot_detector__pb2.UpdateDetectorRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.UpdateDetectorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createDetector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/createDetector',
            common_dot_rpc_dot_detector__pb2.CreateDetectorRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.CreateDetectorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def trainDetector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/trainDetector',
            common_dot_rpc_dot_detector__pb2.TrainDetectorRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.TrainDetectorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def detectObjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/detectObjects',
            common_dot_rpc_dot_detector__pb2.DetectObjectsRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.DetectObjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def detectTexts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/detectTexts',
            common_dot_rpc_dot_detector__pb2.DetectTextsRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.DetectTextsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def uploadDetectorImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/uploadDetectorImage',
            common_dot_rpc_dot_detector__pb2.UploadDetectorImageRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.UploadDetectorImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listDetectorImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/listDetectorImage',
            common_dot_rpc_dot_detector__pb2.ListDetectorImageRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.ListDetectorImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def countDetectorImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/countDetectorImage',
            common_dot_rpc_dot_detector__pb2.CountDetectorImageRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.CountDetectorImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeDetectorImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/removeDetectorImage',
            common_dot_rpc_dot_detector__pb2.RemoveDetectorImageRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.RemoveDetectorImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeDetectorImageLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/removeDetectorImageLabel',
            common_dot_rpc_dot_detector__pb2.RemoveDetectorImageLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.RemoveDetectorImageLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def countDetectorImageLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/countDetectorImageLabel',
            common_dot_rpc_dot_detector__pb2.CountDetectorImageLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.CountDetectorImageLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addDetectorImageLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/addDetectorImageLabel',
            common_dot_rpc_dot_detector__pb2.AddDetectorImageLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.AddDetectorImageLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findDetectorImageLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/findDetectorImageLabel',
            common_dot_rpc_dot_detector__pb2.FindDetectorImageLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.FindDetectorImageLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listDetectorImageLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/listDetectorImageLabel',
            common_dot_rpc_dot_detector__pb2.ListDetectorImageLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.ListDetectorImageLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def listDetectorLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/listDetectorLabel',
            common_dot_rpc_dot_detector__pb2.ListDetectorLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.ListDetectorLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def existsDetectorLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/existsDetectorLabel',
            common_dot_rpc_dot_detector__pb2.ExistsDetectorLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.ExistsDetectorLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addDetectorLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/addDetectorLabel',
            common_dot_rpc_dot_detector__pb2.AddDetectorLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.AddDetectorLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def countDetectorLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/countDetectorLabel',
            common_dot_rpc_dot_detector__pb2.CountDetectorLabelRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.CountDetectorLabelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def suggestStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Detector/suggestStep',
            common_dot_rpc_dot_detector__pb2.SuggestStepRequest.SerializeToString,
            common_dot_rpc_dot_detector__pb2.SuggestStepResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
