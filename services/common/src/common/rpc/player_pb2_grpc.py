# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from common.rpc import base_pb2 as common_dot_rpc_dot_base__pb2
from common.rpc import player_pb2 as common_dot_rpc_dot_player__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in common/rpc/player_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PlayerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ping = channel.unary_unary(
                '/Player/ping',
                request_serializer=common_dot_rpc_dot_base__pb2.Ping.SerializeToString,
                response_deserializer=common_dot_rpc_dot_base__pb2.Pong.FromString,
                _registered_method=True)
        self.playerScriptExist = channel.unary_unary(
                '/Player/playerScriptExist',
                request_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptExistRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptExistResponse.FromString,
                _registered_method=True)
        self.playerScriptLoad = channel.unary_unary(
                '/Player/playerScriptLoad',
                request_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptLoadRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptLoadResponse.FromString,
                _registered_method=True)
        self.playerScriptExecute = channel.unary_unary(
                '/Player/playerScriptExecute',
                request_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptExecuteRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptExecuteResponse.FromString,
                _registered_method=True)
        self.playerScriptUpdate = channel.unary_unary(
                '/Player/playerScriptUpdate',
                request_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptUpdateRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptUpdateResponse.FromString,
                _registered_method=True)
        self.playerScriptGenerate = channel.unary_unary(
                '/Player/playerScriptGenerate',
                request_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptGenerateRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptGenerateResponse.FromString,
                _registered_method=True)
        self.playerRawScriptExecute = channel.unary_unary(
                '/Player/playerRawScriptExecute',
                request_serializer=common_dot_rpc_dot_player__pb2.PlayerRawScriptExecuteRequest.SerializeToString,
                response_deserializer=common_dot_rpc_dot_player__pb2.PlayerRawScriptExecuteResponse.FromString,
                _registered_method=True)


class PlayerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ping(self, request, context):
        """Performs synchronous ping of service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def playerScriptExist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def playerScriptLoad(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def playerScriptExecute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def playerScriptUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def playerScriptGenerate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def playerRawScriptExecute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlayerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ping': grpc.unary_unary_rpc_method_handler(
                    servicer.ping,
                    request_deserializer=common_dot_rpc_dot_base__pb2.Ping.FromString,
                    response_serializer=common_dot_rpc_dot_base__pb2.Pong.SerializeToString,
            ),
            'playerScriptExist': grpc.unary_unary_rpc_method_handler(
                    servicer.playerScriptExist,
                    request_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptExistRequest.FromString,
                    response_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptExistResponse.SerializeToString,
            ),
            'playerScriptLoad': grpc.unary_unary_rpc_method_handler(
                    servicer.playerScriptLoad,
                    request_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptLoadRequest.FromString,
                    response_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptLoadResponse.SerializeToString,
            ),
            'playerScriptExecute': grpc.unary_unary_rpc_method_handler(
                    servicer.playerScriptExecute,
                    request_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptExecuteRequest.FromString,
                    response_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptExecuteResponse.SerializeToString,
            ),
            'playerScriptUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.playerScriptUpdate,
                    request_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptUpdateRequest.FromString,
                    response_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptUpdateResponse.SerializeToString,
            ),
            'playerScriptGenerate': grpc.unary_unary_rpc_method_handler(
                    servicer.playerScriptGenerate,
                    request_deserializer=common_dot_rpc_dot_player__pb2.PlayerScriptGenerateRequest.FromString,
                    response_serializer=common_dot_rpc_dot_player__pb2.PlayerScriptGenerateResponse.SerializeToString,
            ),
            'playerRawScriptExecute': grpc.unary_unary_rpc_method_handler(
                    servicer.playerRawScriptExecute,
                    request_deserializer=common_dot_rpc_dot_player__pb2.PlayerRawScriptExecuteRequest.FromString,
                    response_serializer=common_dot_rpc_dot_player__pb2.PlayerRawScriptExecuteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Player', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Player', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Player(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Player/ping',
            common_dot_rpc_dot_base__pb2.Ping.SerializeToString,
            common_dot_rpc_dot_base__pb2.Pong.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def playerScriptExist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Player/playerScriptExist',
            common_dot_rpc_dot_player__pb2.PlayerScriptExistRequest.SerializeToString,
            common_dot_rpc_dot_player__pb2.PlayerScriptExistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def playerScriptLoad(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Player/playerScriptLoad',
            common_dot_rpc_dot_player__pb2.PlayerScriptLoadRequest.SerializeToString,
            common_dot_rpc_dot_player__pb2.PlayerScriptLoadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def playerScriptExecute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Player/playerScriptExecute',
            common_dot_rpc_dot_player__pb2.PlayerScriptExecuteRequest.SerializeToString,
            common_dot_rpc_dot_player__pb2.PlayerScriptExecuteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def playerScriptUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Player/playerScriptUpdate',
            common_dot_rpc_dot_player__pb2.PlayerScriptUpdateRequest.SerializeToString,
            common_dot_rpc_dot_player__pb2.PlayerScriptUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def playerScriptGenerate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Player/playerScriptGenerate',
            common_dot_rpc_dot_player__pb2.PlayerScriptGenerateRequest.SerializeToString,
            common_dot_rpc_dot_player__pb2.PlayerScriptGenerateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def playerRawScriptExecute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Player/playerRawScriptExecute',
            common_dot_rpc_dot_player__pb2.PlayerRawScriptExecuteRequest.SerializeToString,
            common_dot_rpc_dot_player__pb2.PlayerRawScriptExecuteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
